{"numFailedTestSuites":6,"numFailedTests":11,"numPassedTestSuites":11,"numPassedTests":95,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":17,"numTotalTests":106,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1755028843436,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["QueueService","getQueue"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"QueueService getQueue should return a queue instance","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return a queue instance"},{"ancestorTitles":["QueueService","addJob"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueueService addJob should add a job to the queue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should add a job to the queue"},{"ancestorTitles":["QueueService","registerWorker"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueueService registerWorker should create and return a worker instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create and return a worker instance"},{"ancestorTitles":["QueueService","registerWorker"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueueService registerWorker should create worker with custom options","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create worker with custom options"},{"ancestorTitles":["QueueService","getQueueEvents"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueueService getQueueEvents should return queue events instance","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return queue events instance"},{"ancestorTitles":["QueueService","getQueueEvents"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"QueueService getQueueEvents should return the same queue events instance for the same queue name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return the same queue events instance for the same queue name"},{"ancestorTitles":["QueueService","ping"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"QueueService ping should return PONG when connection ping succeeds","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return PONG when connection ping succeeds"},{"ancestorTitles":["QueueService","close"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"QueueService close should close all queues and the connection","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should close all queues and the connection"}],"endTime":1755028863718,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/QueueService.test.ts","startTime":1755028843828,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PubSub","pubsub instance"],"duration":21,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/PubSub.test.ts:16:22)\n    at Promise.then.completed (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"PubSub pubsub instance should create a new PubSub instance","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create a new PubSub instance"},{"ancestorTitles":["PubSub","TOPICS"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PubSub TOPICS should define JobUpdated topic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should define JobUpdated topic"},{"ancestorTitles":["PubSub","TOPICS"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"PubSub TOPICS should define JobLogAppended topic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should define JobLogAppended topic"},{"ancestorTitles":["PubSub","TOPICS"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PubSub TOPICS should have exactly two topics defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should have exactly two topics defined"}],"endTime":1755028863822,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPubSub › pubsub instance › should create a new PubSub instance\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\n    Expected number of calls: >= \u001b[32m1\u001b[39m\n    Received number of calls:    \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 |\u001b[39m   describe(\u001b[32m'pubsub instance'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m     it(\u001b[32m'should create a new PubSub instance'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 16 |\u001b[39m       expect(\u001b[33mPubSub\u001b[39m)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m       expect(pubsub)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mPubSub\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/PubSub.test.ts\u001b[39m\u001b[0m\u001b[2m:16:22)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/PubSub.test.ts","startTime":1755028843749,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["JobService","listAgentJobs"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"JobService listAgentJobs should return jobs from the queue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return jobs from the queue"},{"ancestorTitles":["JobService","getAgentJob"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JobService getAgentJob should return a specific job by ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return a specific job by ID"},{"ancestorTitles":["JobService","getAgentJob"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"JobService getAgentJob should return null when job is not found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return null when job is not found"},{"ancestorTitles":["JobService","enqueueAgentJob"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JobService enqueueAgentJob should add a job to the queue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should add a job to the queue"},{"ancestorTitles":["JobService","cancelAgentJob"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JobService cancelAgentJob should remove a job from the queue","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should remove a job from the queue"},{"ancestorTitles":["JobService","cancelAgentJob"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JobService cancelAgentJob should return false when job is not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when job is not found"},{"ancestorTitles":["JobService","getQueueStats"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JobService getQueueStats should return queue statistics for all queues","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return queue statistics for all queues"}],"endTime":1755028863973,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/JobService.test.ts","startTime":1755028843781,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MultiProviderSyncOrchestrator","syncProviders"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MultiProviderSyncOrchestrator syncProviders should log sync message for providers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log sync message for providers"},{"ancestorTitles":["MultiProviderSyncOrchestrator","resolveConflicts"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MultiProviderSyncOrchestrator resolveConflicts should log conflict resolution message","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log conflict resolution message"},{"ancestorTitles":["MultiProviderSyncOrchestrator","optimizeOperations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MultiProviderSyncOrchestrator optimizeOperations should log optimization message","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should log optimization message"}],"endTime":1755028864269,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/MultiProviderSyncOrchestrator.test.ts","startTime":1755028864007,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["LogService","appendLog"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"LogService appendLog should publish log entry to PubSub","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should publish log entry to PubSub"},{"ancestorTitles":["LogService","appendLog"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"LogService appendLog should handle different log levels","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle different log levels"},{"ancestorTitles":["LogService","appendLog"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"LogService appendLog should handle multiple log entries for the same job","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle multiple log entries for the same job"}],"endTime":1755028864275,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/LogService.test.ts","startTime":1755028863763,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PostgresService","executeQuery"],"duration":14,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"SELECT * FROM users WHERE id = $1\"\u001b[39m, \u001b[32m[\"user_id\"]\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"SELECT * FROM users WHERE id = $1\"\u001b[39m, \u001b[32m[\"user_id\"]\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/PostgresService.test.ts:68:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"PostgresService executeQuery should execute query with parameters and return results","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should execute query with parameters and return results"},{"ancestorTitles":["PostgresService","executeQuery"],"duration":0,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"SELECT * FROM users\"\u001b[39m, \u001b[32m[]\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"SELECT * FROM users\"\u001b[39m, \u001b[32m[]\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/PostgresService.test.ts:86:30)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"PostgresService executeQuery should execute query without parameters when not provided","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should execute query without parameters when not provided"},{"ancestorTitles":["PostgresService","executeTransaction"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m2\u001b[39m\nReceived number of calls: \u001b[31m4\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m2\u001b[39m\nReceived number of calls: \u001b[31m4\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/PostgresService.test.ts:121:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"PostgresService executeTransaction should execute multiple queries in a transaction","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should execute multiple queries in a transaction"},{"ancestorTitles":["PostgresService","executeTransaction"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"PostgresService executeTransaction should rollback transaction on error","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should rollback transaction on error"},{"ancestorTitles":["PostgresService","healthCheck"],"duration":18,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/PostgresService.test.ts:155:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"PostgresService healthCheck should return true when connection test succeeds","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return true when connection test succeeds"},{"ancestorTitles":["PostgresService","healthCheck"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PostgresService healthCheck should return false when connection test fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when connection test fails"},{"ancestorTitles":["PostgresService","close"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PostgresService close should close the pool connection","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should close the pool connection"}],"endTime":1755028864337,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPostgresService › executeQuery › should execute query with parameters and return results\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"SELECT * FROM users WHERE id = $1\"\u001b[39m, \u001b[32m[\"user_id\"]\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 66 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m postgresService\u001b[33m.\u001b[39mexecuteQuery(query\u001b[33m,\u001b[39m params)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 67 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 68 |\u001b[39m       expect(mockPool\u001b[33m.\u001b[39mquery)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(query\u001b[33m,\u001b[39m params)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 69 |\u001b[39m       expect(response)\u001b[33m.\u001b[39mtoBe(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 71 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/PostgresService.test.ts\u001b[39m\u001b[0m\u001b[2m:68:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPostgresService › executeQuery › should execute query without parameters when not provided\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32m\"SELECT * FROM users\"\u001b[39m, \u001b[32m[]\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 |\u001b[39m       \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m postgresService\u001b[33m.\u001b[39mexecuteQuery(query)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 85 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 |\u001b[39m       expect(mockPool\u001b[33m.\u001b[39mquery)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(query\u001b[33m,\u001b[39m [])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 87 |\u001b[39m       expect(response)\u001b[33m.\u001b[39mtoBe(result)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 89 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/PostgresService.test.ts\u001b[39m\u001b[0m\u001b[2m:86:30)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPostgresService › executeTransaction › should execute multiple queries in a transaction\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m2\u001b[39m\n    Received number of calls: \u001b[31m4\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 119 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 120 |\u001b[39m       expect(mockPool\u001b[33m.\u001b[39mconnect)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 121 |\u001b[39m       expect(mockClient\u001b[33m.\u001b[39mquery)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 122 |\u001b[39m       expect(mockClient\u001b[33m.\u001b[39mrelease)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 123 |\u001b[39m       expect(response)\u001b[33m.\u001b[39mtoEqual([result1\u001b[33m,\u001b[39m result2])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 124 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/PostgresService.test.ts\u001b[39m\u001b[0m\u001b[2m:121:32)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPostgresService › healthCheck › should return true when connection test succeeds\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 153 |\u001b[39m       \u001b[36mconst\u001b[39m isHealthy \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m postgresService\u001b[33m.\u001b[39mhealthCheck()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 155 |\u001b[39m       expect(isHealthy)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m       expect(mockPool\u001b[33m.\u001b[39mquery)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'SELECT 1'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 158 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/PostgresService.test.ts\u001b[39m\u001b[0m\u001b[2m:155:25)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/PostgresService.test.ts","startTime":1755028843774,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["AuthService","hashPassword"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"AuthService hashPassword should hash password using bcrypt","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should hash password using bcrypt"},{"ancestorTitles":["AuthService","comparePasswords"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService comparePasswords should compare password with hash using bcrypt","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should compare password with hash using bcrypt"},{"ancestorTitles":["AuthService","generateToken"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AuthService generateToken should generate JWT token with user data","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate JWT token with user data"},{"ancestorTitles":["AuthService","verifyToken"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService verifyToken should verify JWT token and return payload","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should verify JWT token and return payload"},{"ancestorTitles":["AuthService","verifyToken"],"duration":42,"failureDetails":[],"failureMessages":[],"fullName":"AuthService verifyToken should throw error for invalid token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for invalid token"},{"ancestorTitles":["AuthService","authenticateUser"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AuthService authenticateUser should authenticate user with correct credentials","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should authenticate user with correct credentials"},{"ancestorTitles":["AuthService","authenticateUser"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthService authenticateUser should return null for non-existent user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null for non-existent user"},{"ancestorTitles":["AuthService","authenticateUser"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthService authenticateUser should return null for incorrect password","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return null for incorrect password"},{"ancestorTitles":["AuthService","authenticateUser"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthService authenticateUser should update last_login timestamp after successful authentication","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should update last_login timestamp after successful authentication"},{"ancestorTitles":["AuthService","healthCheck"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService healthCheck should return true when Postgres service is healthy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return true when Postgres service is healthy"},{"ancestorTitles":["AuthService","healthCheck"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService healthCheck should return false when Postgres service is not healthy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when Postgres service is not healthy"},{"ancestorTitles":["AuthService","healthCheck"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"AuthService healthCheck should handle errors during health check","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors during health check"},{"ancestorTitles":["AuthService","close"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"AuthService close should close Postgres connection","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should close Postgres connection"}],"endTime":1755028865055,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/AuthService.test.ts","startTime":1755028843798,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["QueueMonitor","start"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"QueueMonitor start should register event listeners for all supported queues","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"status":"passed","title":"should register event listeners for all supported queues"},{"ancestorTitles":["QueueMonitor","start"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueueMonitor start should publish job updates when active event is triggered","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should publish job updates when active event is triggered"},{"ancestorTitles":["QueueMonitor","start"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueueMonitor start should publish job updates when completed event is triggered","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should publish job updates when completed event is triggered"},{"ancestorTitles":["QueueMonitor","start"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueueMonitor start should publish job updates when failed event is triggered","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should publish job updates when failed event is triggered"}],"endTime":1755028865428,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/QueueMonitor.test.ts","startTime":1755028843805,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SupabaseService","getClient"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"SupabaseService getClient should return null when no tokens are found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null when no tokens are found"},{"ancestorTitles":["SupabaseService","getClient"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SupabaseService getClient should create and return a Supabase client when tokens are available","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create and return a Supabase client when tokens are available"},{"ancestorTitles":["SupabaseService","uploadFile"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"SupabaseService uploadFile should upload a file successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should upload a file successfully"},{"ancestorTitles":["SupabaseService","uploadFile"],"duration":29,"failureDetails":[],"failureMessages":[],"fullName":"SupabaseService uploadFile should throw an error when upload fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error when upload fails"},{"ancestorTitles":["SupabaseService","downloadFile"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SupabaseService downloadFile should download a file successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should download a file successfully"},{"ancestorTitles":["SupabaseService","listFiles"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SupabaseService listFiles should list files successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should list files successfully"},{"ancestorTitles":["SupabaseService","deleteFile"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"SupabaseService deleteFile should delete a file successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should delete a file successfully"}],"endTime":1755028865457,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/SupabaseService.test.ts","startTime":1755028843840,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["StorageProvider","StorageProviderFactory"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"StorageProvider StorageProviderFactory should create DropboxService instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create DropboxService instance"},{"ancestorTitles":["StorageProvider","StorageProviderFactory"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"StorageProvider StorageProviderFactory should create GoogleDriveService instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create GoogleDriveService instance"},{"ancestorTitles":["StorageProvider","StorageProviderFactory"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"StorageProvider StorageProviderFactory should create SupabaseService instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create SupabaseService instance"},{"ancestorTitles":["StorageProvider","StorageProviderFactory"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"StorageProvider StorageProviderFactory should throw error for unsupported provider type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for unsupported provider type"}],"endTime":1755028865682,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/StorageProvider.test.ts","startTime":1755028843747,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["StorageProvider Integration","DropboxService Integration"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"StorageProvider Integration DropboxService Integration should generate authorization URL","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate authorization URL"},{"ancestorTitles":["StorageProvider Integration","GoogleDriveService Integration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"StorageProvider Integration GoogleDriveService Integration should generate authorization URL","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate authorization URL"},{"ancestorTitles":["StorageProvider Integration","SupabaseService Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"StorageProvider Integration SupabaseService Integration should initialize SupabaseService","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should initialize SupabaseService"}],"endTime":1755028865917,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/integration/StorageProvider.integration.test.ts","startTime":1755028843776,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["StorageProvider Performance","Factory Pattern Performance"],"duration":177,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m100\u001b[39m\nReceived:   \u001b[31m168.1892919999991\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m100\u001b[39m\nReceived:   \u001b[31m168.1892919999991\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/performance/StorageProvider.performance.test.ts:23:24)\n    at Promise.then.completed (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"StorageProvider Performance Factory Pattern Performance should create providers quickly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should create providers quickly"},{"ancestorTitles":["StorageProvider Performance","Orchestrator Performance"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"StorageProvider Performance Orchestrator Performance should handle multiple providers efficiently","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle multiple providers efficiently"}],"endTime":1755028865932,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mStorageProvider Performance › Factory Pattern Performance › should create providers quickly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: < \u001b[32m100\u001b[39m\n    Received:   \u001b[31m168.1892919999991\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m       \u001b[90m// Should create 1000 providers in under 100ms\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 23 |\u001b[39m       expect(duration)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m100\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m   \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/performance/StorageProvider.performance.test.ts\u001b[39m\u001b[0m\u001b[2m:23:24)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/performance/StorageProvider.performance.test.ts","startTime":1755028843748,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ConfigService","getDatabaseConfig"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService getDatabaseConfig should return complete database configuration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return complete database configuration"},{"ancestorTitles":["ConfigService","getDatabaseConfig"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService getDatabaseConfig should return correct Neo4j configuration","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should return correct Neo4j configuration"},{"ancestorTitles":["ConfigService","getDatabaseConfig"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService getDatabaseConfig should return correct PostgreSQL configuration","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should return correct PostgreSQL configuration"},{"ancestorTitles":["ConfigService","getDatabaseConfig"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService getDatabaseConfig should return correct Redis configuration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return correct Redis configuration"},{"ancestorTitles":["ConfigService","getAuthConfig"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService getAuthConfig should return complete authentication configuration","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return complete authentication configuration"},{"ancestorTitles":["ConfigService","getAppConfig"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService getAppConfig should return complete application configuration","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return complete application configuration"},{"ancestorTitles":["ConfigService","validateConfig"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService validateConfig should return true for valid configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true for valid configuration"},{"ancestorTitles":["ConfigService","validateConfig"],"duration":3,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/ConfigService.test.ts:133:23)\n    at Promise.then.completed (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigService validateConfig should return false when Neo4j configuration is missing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return false when Neo4j configuration is missing"},{"ancestorTitles":["ConfigService","validateConfig"],"duration":0,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/ConfigService.test.ts:144:23)\n    at Promise.then.completed (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigService validateConfig should return false when PostgreSQL configuration is missing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return false when PostgreSQL configuration is missing"},{"ancestorTitles":["ConfigService","validateConfig"],"duration":0,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/ConfigService.test.ts:155:23)\n    at Promise.then.completed (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigService validateConfig should return false when Redis configuration is missing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return false when Redis configuration is missing"},{"ancestorTitles":["ConfigService","validateConfig"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService validateConfig should warn when using default JWT secret","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should warn when using default JWT secret"},{"ancestorTitles":["ConfigService","loadSecretFromFile"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService loadSecretFromFile should return null when file does not exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null when file does not exist"},{"ancestorTitles":["ConfigService","healthCheck"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ConfigService healthCheck should return true when configuration is valid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true when configuration is valid"},{"ancestorTitles":["ConfigService","healthCheck"],"duration":0,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m","name":"toBe","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/ConfigService.test.ts:201:25)\n    at Promise.then.completed (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"ConfigService healthCheck should return false when configuration validation fails","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should return false when configuration validation fails"}],"endTime":1755028865979,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigService › validateConfig › should return false when Neo4j configuration is missing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 131 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 132 |\u001b[39m       \u001b[36mconst\u001b[39m isValid \u001b[33m=\u001b[39m configServiceMissingNeo4j\u001b[33m.\u001b[39mvalidateConfig()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 133 |\u001b[39m       expect(isValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 135 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 136 |\u001b[39m     it(\u001b[32m'should return false when PostgreSQL configuration is missing'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/ConfigService.test.ts\u001b[39m\u001b[0m\u001b[2m:133:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigService › validateConfig › should return false when PostgreSQL configuration is missing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 143 |\u001b[39m       \u001b[36mconst\u001b[39m isValid \u001b[33m=\u001b[39m configServiceMissingPostgres\u001b[33m.\u001b[39mvalidateConfig()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 144 |\u001b[39m       expect(isValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 146 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 147 |\u001b[39m     it(\u001b[32m'should return false when Redis configuration is missing'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/ConfigService.test.ts\u001b[39m\u001b[0m\u001b[2m:144:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigService › validateConfig › should return false when Redis configuration is missing\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 153 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m       \u001b[36mconst\u001b[39m isValid \u001b[33m=\u001b[39m configServiceMissingRedis\u001b[33m.\u001b[39mvalidateConfig()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 155 |\u001b[39m       expect(isValid)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 158 |\u001b[39m     it(\u001b[32m'should warn when using default JWT secret'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/ConfigService.test.ts\u001b[39m\u001b[0m\u001b[2m:155:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mConfigService › healthCheck › should return false when configuration validation fails\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 199 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 200 |\u001b[39m       \u001b[36mconst\u001b[39m isHealthy \u001b[33m=\u001b[39m configServiceInvalid\u001b[33m.\u001b[39mhealthCheck()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 201 |\u001b[39m       expect(isHealthy)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 202 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 203 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 204 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/ConfigService.test.ts\u001b[39m\u001b[0m\u001b[2m:201:25)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/ConfigService.test.ts","startTime":1755028843791,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Neo4jService","executeQuery"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService executeQuery should execute query with parameters and return results","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should execute query with parameters and return results"},{"ancestorTitles":["Neo4jService","executeQuery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService executeQuery should execute query without orgId when not provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should execute query without orgId when not provided"},{"ancestorTitles":["Neo4jService","executeQuery"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService executeQuery should add orgId to parameters when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add orgId to parameters when provided"},{"ancestorTitles":["Neo4jService","executeWriteQuery"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService executeWriteQuery should execute write query and return results","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should execute write query and return results"},{"ancestorTitles":["Neo4jService","executeTransaction"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService executeTransaction should execute multiple queries in a transaction","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should execute multiple queries in a transaction"},{"ancestorTitles":["Neo4jService","executeTransaction"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService executeTransaction should rollback transaction on error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should rollback transaction on error"},{"ancestorTitles":["Neo4jService","executeBatch"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService executeBatch should execute batch queries with parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should execute batch queries with parameters"},{"ancestorTitles":["Neo4jService","healthCheck"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService healthCheck should return true when connectivity verification succeeds","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return true when connectivity verification succeeds"},{"ancestorTitles":["Neo4jService","healthCheck"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService healthCheck should return false when connectivity verification fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when connectivity verification fails"},{"ancestorTitles":["Neo4jService","close"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Neo4jService close should close the driver connection","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should close the driver connection"}],"endTime":1755028866189,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/Neo4jService.test.ts","startTime":1755028843815,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationService","applyAllMigrations"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService applyAllMigrations should apply both Neo4j and PostgreSQL migrations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should apply both Neo4j and PostgreSQL migrations"},{"ancestorTitles":["MigrationService","applyNeo4jMigrations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService applyNeo4jMigrations should read and execute Neo4j migration files","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should read and execute Neo4j migration files"},{"ancestorTitles":["MigrationService","applyNeo4jMigrations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService applyNeo4jMigrations should handle case when Neo4j migrations directory does not exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle case when Neo4j migrations directory does not exist"},{"ancestorTitles":["MigrationService","applyPostgresMigrations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService applyPostgresMigrations should read and execute PostgreSQL migration files","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should read and execute PostgreSQL migration files"},{"ancestorTitles":["MigrationService","applyPostgresMigrations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService applyPostgresMigrations should handle case when PostgreSQL migrations directory does not exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle case when PostgreSQL migrations directory does not exist"},{"ancestorTitles":["MigrationService","applyPostgresMigrations"],"duration":2,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mStringContaining \"Policy already exists, skipping\"\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mStringContaining \"Policy already exists, skipping\"\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/MigrationService.test.ts:169:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"MigrationService applyPostgresMigrations should skip duplicate policy errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should skip duplicate policy errors"},{"ancestorTitles":["MigrationService","createMigrationDirectories"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService createMigrationDirectories should create migration directories if they do not exist","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create migration directories if they do not exist"},{"ancestorTitles":["MigrationService","healthCheck"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService healthCheck should return true when both services are healthy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return true when both services are healthy"},{"ancestorTitles":["MigrationService","healthCheck"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService healthCheck should return false when Neo4j service is not healthy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when Neo4j service is not healthy"},{"ancestorTitles":["MigrationService","healthCheck"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService healthCheck should return false when PostgreSQL service is not healthy","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when PostgreSQL service is not healthy"},{"ancestorTitles":["MigrationService","healthCheck"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService healthCheck should handle errors during health check","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors during health check"},{"ancestorTitles":["MigrationService","close"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MigrationService close should close both Neo4j and PostgreSQL connections","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should close both Neo4j and PostgreSQL connections"}],"endTime":1755028866233,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMigrationService › applyPostgresMigrations › should skip duplicate policy errors\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected: \u001b[32mStringContaining \"Policy already exists, skipping\"\u001b[39m\n\n    Number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 168 |\u001b[39m       \u001b[90m// Should still complete successfully despite the error\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 169 |\u001b[39m       expect(consoleLogSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 170 |\u001b[39m         expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'Policy already exists, skipping'\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 171 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 172 |\u001b[39m       \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/tests/unit/MigrationService.test.ts\u001b[39m\u001b[0m\u001b[2m:169:29)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/MigrationService.test.ts","startTime":1755028843768,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["EventProcessingService"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EventProcessingService should instantiate successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should instantiate successfully"},{"ancestorTitles":["EventProcessingService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EventProcessingService should have all three queues defined","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should have all three queues defined"},{"ancestorTitles":["EventProcessingService"],"duration":30,"failureDetails":[],"failureMessages":[],"fullName":"EventProcessingService should add sync job to queue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should add sync job to queue"},{"ancestorTitles":["EventProcessingService"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"EventProcessingService should add classification job to queue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should add classification job to queue"},{"ancestorTitles":["EventProcessingService"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"EventProcessingService should add extraction job to queue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should add extraction job to queue"}],"endTime":1755028866485,"message":"","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/eventProcessingService.test.ts","startTime":1755028843796,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1755028868696,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/services/provenance/ProvenanceService.ts\u001b[0m:\u001b[93m404\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'record' implicitly has an 'any' type.\n\n    \u001b[7m404\u001b[0m     return result.records.map(record => {\n    \u001b[7m   \u001b[0m \u001b[91m                              ~~~~~~\u001b[0m\n","name":"/Users/jeffhaskell/Documents/Olivine Projects/Blueprint/Olivine-V11/backend/src/tests/unit/AgentRegistry.test.ts","startTime":1755028868696,"status":"failed","summary":""}],"wasInterrupted":false}
